import { IMenu, IMenuCreateOptions, IMenuService, MenuId } from './actions';
import { ICommandService } from '../../commands/common/commands';
import { IContextKeyService } from '../../contextkey/common/contextkey';
export declare class MenuService implements IMenuService {
    private readonly _commandService;
    readonly _serviceBrand: undefined;
    constructor(_commandService: ICommandService);
    /**
     * Create a new menu for the given menu identifier. A menu sends events when it's entries
     * have changed (placement, enablement, checked-state). By default it does send events for
     * sub menu entries. That is more expensive and must be explicitly enabled with the
     * `emitEventsForSubmenuChanges` flag.
     */
    createMenu(id: MenuId, contextKeyService: IContextKeyService, options?: IMenuCreateOptions): IMenu;
}
//# sourceMappingURL=menuService.d.ts.map