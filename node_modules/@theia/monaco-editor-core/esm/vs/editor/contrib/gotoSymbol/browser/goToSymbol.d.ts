import { CancellationToken } from '../../../../base/common/cancellation';
import { Position } from '../../../common/core/position';
import { ITextModel } from '../../../common/model';
import { DeclarationProvider, DefinitionProvider, ImplementationProvider, LocationLink, ReferenceProvider, TypeDefinitionProvider } from '../../../common/languages';
import { LanguageFeatureRegistry } from '../../../common/languageFeatureRegistry';
export declare function getDefinitionsAtPosition(registry: LanguageFeatureRegistry<DefinitionProvider>, model: ITextModel, position: Position, token: CancellationToken): Promise<LocationLink[]>;
export declare function getDeclarationsAtPosition(registry: LanguageFeatureRegistry<DeclarationProvider>, model: ITextModel, position: Position, token: CancellationToken): Promise<LocationLink[]>;
export declare function getImplementationsAtPosition(registry: LanguageFeatureRegistry<ImplementationProvider>, model: ITextModel, position: Position, token: CancellationToken): Promise<LocationLink[]>;
export declare function getTypeDefinitionsAtPosition(registry: LanguageFeatureRegistry<TypeDefinitionProvider>, model: ITextModel, position: Position, token: CancellationToken): Promise<LocationLink[]>;
export declare function getReferencesAtPosition(registry: LanguageFeatureRegistry<ReferenceProvider>, model: ITextModel, position: Position, compact: boolean, token: CancellationToken): Promise<LocationLink[]>;
//# sourceMappingURL=goToSymbol.d.ts.map