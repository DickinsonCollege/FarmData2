import { CancellationToken } from '../../../../base/common/cancellation';
import { IActiveCodeEditor, ICodeEditor } from '../../../browser/editorBrowser';
import { EditorAction, IActionOptions, ServicesAccessor } from '../../../browser/editorExtensions';
import { GoToLocationValues } from '../../../common/config/editorOptions';
import * as corePosition from '../../../common/core/position';
import { ITextModel } from '../../../common/model';
import { ReferencesModel } from './referencesModel';
import { IWordAtPosition } from '../../../common/core/wordHelper';
import { ILanguageFeaturesService } from '../../../common/services/languageFeatures';
export interface SymbolNavigationActionConfig {
    openToSide: boolean;
    openInPeek: boolean;
    muteMessage: boolean;
}
export declare class SymbolNavigationAnchor {
    readonly model: ITextModel;
    readonly position: corePosition.Position;
    static is(thing: any): thing is SymbolNavigationAnchor;
    constructor(model: ITextModel, position: corePosition.Position);
}
export declare abstract class SymbolNavigationAction extends EditorAction {
    readonly configuration: SymbolNavigationActionConfig;
    constructor(configuration: SymbolNavigationActionConfig, opts: IActionOptions);
    run(accessor: ServicesAccessor, editor: ICodeEditor, arg?: SymbolNavigationAnchor | unknown): Promise<void>;
    protected abstract _getLocationModel(languageFeaturesService: ILanguageFeaturesService, model: ITextModel, position: corePosition.Position, token: CancellationToken): Promise<ReferencesModel | undefined>;
    protected abstract _getNoResultFoundMessage(info: IWordAtPosition | null): string;
    protected abstract _getAlternativeCommand(editor: IActiveCodeEditor): string;
    protected abstract _getGoToPreference(editor: IActiveCodeEditor): GoToLocationValues;
    private _onResult;
    private _openReference;
    private _openInPeek;
}
export declare class DefinitionAction extends SymbolNavigationAction {
    protected _getLocationModel(languageFeaturesService: ILanguageFeaturesService, model: ITextModel, position: corePosition.Position, token: CancellationToken): Promise<ReferencesModel>;
    protected _getNoResultFoundMessage(info: IWordAtPosition | null): string;
    protected _getAlternativeCommand(editor: IActiveCodeEditor): string;
    protected _getGoToPreference(editor: IActiveCodeEditor): GoToLocationValues;
}
//# sourceMappingURL=goToCommands.d.ts.map