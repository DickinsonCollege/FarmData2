import { ICodeEditor } from '../../../browser/editorBrowser';
import { IEditorContribution } from '../../../common/editorCommon';
import { CodeLensModel } from './codelens';
import { ICodeLensCache } from './codeLensCache';
import { ICommandService } from '../../../../platform/commands/common/commands';
import { INotificationService } from '../../../../platform/notification/common/notification';
import { ILanguageFeatureDebounceService } from '../../../common/services/languageFeatureDebounce';
import { ILanguageFeaturesService } from '../../../common/services/languageFeatures';
export declare class CodeLensContribution implements IEditorContribution {
    private readonly _editor;
    private readonly _languageFeaturesService;
    private readonly _commandService;
    private readonly _notificationService;
    private readonly _codeLensCache;
    static readonly ID: string;
    private readonly _disposables;
    private readonly _localToDispose;
    private readonly _styleElement;
    private readonly _styleClassName;
    private readonly _lenses;
    private readonly _provideCodeLensDebounce;
    private readonly _resolveCodeLensesDebounce;
    private readonly _resolveCodeLensesScheduler;
    private _getCodeLensModelPromise;
    private _oldCodeLensModels;
    private _currentCodeLensModel;
    private _resolveCodeLensesPromise;
    constructor(_editor: ICodeEditor, _languageFeaturesService: ILanguageFeaturesService, debounceService: ILanguageFeatureDebounceService, _commandService: ICommandService, _notificationService: INotificationService, _codeLensCache: ICodeLensCache);
    dispose(): void;
    private _getLayoutInfo;
    private _updateLensStyle;
    private _localDispose;
    private _onModelChange;
    private _disposeAllLenses;
    private _renderCodeLensSymbols;
    private _resolveCodeLensesInViewportSoon;
    private _resolveCodeLensesInViewport;
    getModel(): CodeLensModel | undefined;
}
//# sourceMappingURL=codelensController.d.ts.map