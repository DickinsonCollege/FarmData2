import { Position } from '../../../common/core/position';
import { Range } from '../../../common/core/range';
import { ITextModel } from '../../../common/model';
import { InlineCompletion } from '../../../common/languages';
import { GhostText } from './ghostText';
/**
 * A normalized inline completion is an inline completion with a defined range.
*/
export interface NormalizedInlineCompletion extends InlineCompletion {
    range: Range;
}
export declare function normalizedInlineCompletionsEquals(a: NormalizedInlineCompletion | undefined, b: NormalizedInlineCompletion | undefined): boolean;
/**
 * @param previewSuffixLength Sets where to split `inlineCompletion.text`.
 * 	If the text is `hello` and the suffix length is 2, the non-preview part is `hel` and the preview-part is `lo`.
*/
export declare function inlineCompletionToGhostText(inlineCompletion: NormalizedInlineCompletion, textModel: ITextModel, mode: 'prefix' | 'subword' | 'subwordSmart', cursorPosition?: Position, previewSuffixLength?: number): GhostText | undefined;
//# sourceMappingURL=inlineCompletionToGhostText.d.ts.map