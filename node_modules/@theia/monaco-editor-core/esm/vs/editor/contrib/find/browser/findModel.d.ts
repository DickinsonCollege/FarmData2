import { IActiveCodeEditor } from '../../../browser/editorBrowser';
import { FindReplaceState } from './findState';
import { RawContextKey } from '../../../../platform/contextkey/common/contextkey';
import { IKeybindings } from '../../../../platform/keybinding/common/keybindingsRegistry';
export declare const CONTEXT_FIND_WIDGET_VISIBLE: RawContextKey<boolean>;
export declare const CONTEXT_FIND_WIDGET_NOT_VISIBLE: import("../../../../platform/contextkey/common/contextkey").ContextKeyExpression;
export declare const CONTEXT_FIND_INPUT_FOCUSED: RawContextKey<boolean>;
export declare const CONTEXT_REPLACE_INPUT_FOCUSED: RawContextKey<boolean>;
export declare const ToggleCaseSensitiveKeybinding: IKeybindings;
export declare const ToggleWholeWordKeybinding: IKeybindings;
export declare const ToggleRegexKeybinding: IKeybindings;
export declare const ToggleSearchScopeKeybinding: IKeybindings;
export declare const TogglePreserveCaseKeybinding: IKeybindings;
export declare const FIND_IDS: {
    StartFindAction: string;
    StartFindWithSelection: string;
    StartFindWithArgs: string;
    NextMatchFindAction: string;
    PreviousMatchFindAction: string;
    NextSelectionMatchFindAction: string;
    PreviousSelectionMatchFindAction: string;
    StartFindReplaceAction: string;
    CloseFindWidgetCommand: string;
    ToggleCaseSensitiveCommand: string;
    ToggleWholeWordCommand: string;
    ToggleRegexCommand: string;
    ToggleSearchScopeCommand: string;
    TogglePreserveCaseCommand: string;
    ReplaceOneAction: string;
    ReplaceAllAction: string;
    SelectAllMatchesAction: string;
};
export declare const MATCHES_LIMIT = 19999;
export declare class FindModelBoundToEditorModel {
    private readonly _editor;
    private readonly _state;
    private readonly _toDispose;
    private readonly _decorations;
    private _ignoreModelContentChanged;
    private readonly _startSearchingTimer;
    private readonly _updateDecorationsScheduler;
    private _isDisposed;
    constructor(editor: IActiveCodeEditor, state: FindReplaceState);
    dispose(): void;
    private _onStateChanged;
    private static _getSearchRange;
    private research;
    private _hasMatches;
    private _cannotFind;
    private _setCurrentFindMatch;
    private _prevSearchPosition;
    private _moveToPrevMatch;
    moveToPrevMatch(): void;
    private _nextSearchPosition;
    private _moveToNextMatch;
    private _getNextMatch;
    moveToNextMatch(): void;
    private _getReplacePattern;
    replace(): void;
    private _findMatches;
    replaceAll(): void;
    private _largeReplaceAll;
    private _regularReplaceAll;
    selectAllMatches(): void;
    private _executeEditorCommand;
}
//# sourceMappingURL=findModel.d.ts.map