import { ICodeEditor } from '../../../browser/editorBrowser';
import { Range } from '../../../common/core/range';
import { IEditorContribution } from '../../../common/editorCommon';
import { OvertypingCapturer } from '../../suggest/browser/suggestOvertypingCapturer';
import { IContextKeyService, RawContextKey } from '../../../../platform/contextkey/common/contextkey';
import { IInstantiationService } from '../../../../platform/instantiation/common/instantiation';
import { ILogService } from '../../../../platform/log/common/log';
export interface ISnippetInsertOptions {
    overwriteBefore: number;
    overwriteAfter: number;
    adjustWhitespace: boolean;
    undoStopBefore: boolean;
    undoStopAfter: boolean;
    clipboardText: string | undefined;
    overtypingCapturer: OvertypingCapturer | undefined;
}
export declare class SnippetController2 implements IEditorContribution {
    private readonly _editor;
    private readonly _instantiationService;
    private readonly _logService;
    static readonly ID = "snippetController2";
    static get(editor: ICodeEditor): SnippetController2 | null;
    static readonly InSnippetMode: RawContextKey<boolean>;
    static readonly HasNextTabstop: RawContextKey<boolean>;
    static readonly HasPrevTabstop: RawContextKey<boolean>;
    private readonly _inSnippet;
    private readonly _hasNextTabstop;
    private readonly _hasPrevTabstop;
    private _session?;
    private _snippetListener;
    private _modelVersionId;
    private _currentChoice?;
    constructor(_editor: ICodeEditor, _instantiationService: IInstantiationService, _logService: ILogService, contextKeyService: IContextKeyService);
    dispose(): void;
    insert(template: string, opts?: Partial<ISnippetInsertOptions>): void;
    private _doInsert;
    private _updateState;
    private _handleChoice;
    finish(): void;
    cancel(resetSelection?: boolean): void;
    prev(): void;
    next(): void;
    isInSnippet(): boolean;
    getSessionEnclosingRange(): Range | undefined;
}
//# sourceMappingURL=snippetController2.d.ts.map