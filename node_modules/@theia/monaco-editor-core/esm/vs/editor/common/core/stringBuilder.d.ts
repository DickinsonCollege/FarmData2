declare const TextDecoder: {
    prototype: TextDecoder;
    new (label?: string): TextDecoder;
};
interface TextDecoder {
    decode(view: Uint16Array): string;
}
export interface IStringBuilder {
    build(): string;
    reset(): void;
    write1(charCode: number): void;
    appendASCII(charCode: number): void;
    appendASCIIString(str: string): void;
}
export declare function getPlatformTextDecoder(): TextDecoder;
export declare const hasTextDecoder: boolean;
export declare let createStringBuilder: (capacity: number) => IStringBuilder;
export declare let decodeUTF16LE: (source: Uint8Array, offset: number, len: number) => string;
export {};
//# sourceMappingURL=stringBuilder.d.ts.map