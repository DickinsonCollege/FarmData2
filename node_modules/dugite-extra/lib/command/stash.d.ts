import { IGitExecutionOptions } from "../core";
export declare namespace stash {
    /**
     * Stash the current changes.
     *
     * @param repositoryPath the repository path to the local Git clone.
     * @param message an optional stash message.
     */
    function push(repositoryPath: string, message?: string, options?: IGitExecutionOptions): Promise<void>;
    /**
     * List the current stashes.
     *
     * @param repositoryPath the repository path to the local Git clone.
     */
    function list(repositoryPath: string, options?: IGitExecutionOptions): Promise<string[]>;
    /**
     * Apply the latest stash or the stash with the given id.
     *
     * @param repositoryPath the repository path to the local Git clone.
     * @param id the id of the stash (stash@{n})
     */
    function apply(repositoryPath: string, id?: string, options?: IGitExecutionOptions): Promise<void>;
    /**
     * Pop the latest stash or the stash with the given id.
     *
     * @param repositoryPath the repository path to the local Git clone.
     * @param id the id of the stash (stash@{n})
     */
    function pop(repositoryPath: string, id?: string, options?: IGitExecutionOptions): Promise<void>;
    /**
     * Drop the latest stash or the stash with the given id.
     *
     * @param repositoryPath the repository path to the local Git clone.
     * @param id the id of the stash (stash@{n})
     */
    function drop(repositoryPath: string, id?: string, options?: IGitExecutionOptions): Promise<void>;
    /**
     * Clear the current stashes.
     *
     * @param repositoryPath the repository path to the local Git clone.
     */
    function clear(repositoryPath: string, options?: IGitExecutionOptions): Promise<void>;
}
