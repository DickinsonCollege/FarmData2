import { FileEntry } from '../model/status';
export declare type StatusItem = IStatusHeader | IStatusEntry;
export interface IStatusHeader {
    readonly kind: 'header';
    readonly value: string;
}
/** A representation of a parsed status entry from git status */
export interface IStatusEntry {
    readonly kind: 'entry';
    /** The path to the file relative to the repository root */
    readonly path: string;
    /** The two character long status code */
    readonly statusCode: string;
    /** The original path in the case of a renamed file */
    readonly oldPath?: string;
}
/** Parses output from git status --porcelain -z into file status entries */
export declare function parsePorcelainStatus(output: string, limit?: number): {
    entries: ReadonlyArray<StatusItem>;
    incomplete: boolean;
};
/**
 * Map the raw status text from Git to a structure we can work with in the app.
 */
export declare function mapStatus(status: string): FileEntry;
