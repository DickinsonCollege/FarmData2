import { Commit } from './commit';
export declare enum BranchType {
    Local = 0,
    Remote = 1
}
/** A branch as loaded from Git. */
export declare class Branch {
    /** The short name of the branch. E.g., `master`. */
    readonly name: string;
    /** The remote-prefixed upstream name. E.g., `origin/master`. */
    readonly upstream: string | undefined;
    /** The type of branch, e.g., local or remote. */
    readonly type: BranchType;
    /** The commit associated with this branch */
    readonly tip: Commit;
    constructor(name: string, upstream: string | undefined, tip: Commit, type: BranchType);
    /** The name of the upstream's remote. */
    get remote(): string | undefined;
    /**
     * The name of the branch's upstream without the remote prefix.
     */
    get upstreamWithoutRemote(): string | undefined;
    /**
     * The name of the branch without the remote prefix. If the branch is a local
     * branch, this is the same as its `name`.
     */
    get nameWithoutRemote(): string;
}
